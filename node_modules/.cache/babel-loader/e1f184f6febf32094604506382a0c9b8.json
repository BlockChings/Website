{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\responsive-navbar-main\\\\candy-machine-ui\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useMemo } from 'react';\nimport * as anchor from '@project-serum/anchor';\nimport Home from './Home';\nimport NewNavbar from './Components/NewNavbar';\nimport Team from './Components/Team';\nimport Footer from './Components/footer';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport { getPhantomWallet, getSlopeWallet, getSolflareWallet } from '@solana/wallet-adapter-wallets';\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\nimport { ThemeProvider, createTheme } from '@material-ui/core';\nimport Milestone from './Components/Milestone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    type: 'dark'\n  }\n});\n\nconst getCandyMachineId = () => {\n  try {\n    const candyMachineId = new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID);\n    return candyMachineId;\n  } catch (e) {\n    console.log('Failed to construct CandyMachineId', e);\n    return undefined;\n  }\n};\n\nconst candyMachineId = getCandyMachineId();\nconst network = process.env.REACT_APP_SOLANA_NETWORK;\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST;\nconst connection = new anchor.web3.Connection(rpcHost ? rpcHost : anchor.web3.clusterApiUrl('devnet'));\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE, 10);\nconst txTimeoutInMilliseconds = 30000;\n\nconst App = () => {\n  _s();\n\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n  const wallets = useMemo(() => [getPhantomWallet(), getSolflareWallet(), getSlopeWallet()], []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n      endpoint: endpoint,\n      children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n        wallets: wallets,\n        autoConnect: true,\n        children: /*#__PURE__*/_jsxDEV(WalletDialogProvider, {\n          children: [/*#__PURE__*/_jsxDEV(NewNavbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Home, {\n            candyMachineId: candyMachineId,\n            connection: connection,\n            startDate: startDateSeed,\n            txTimeout: txTimeoutInMilliseconds,\n            rpcHost: rpcHost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Milestone, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Team, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"RNaTq20PjYTGasfEtgZ8qKkPMD0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/user/Desktop/responsive-navbar-main/candy-machine-ui/src/App.tsx"],"names":["useMemo","anchor","Home","NewNavbar","Team","Footer","clusterApiUrl","getPhantomWallet","getSlopeWallet","getSolflareWallet","ConnectionProvider","WalletProvider","WalletDialogProvider","ThemeProvider","createTheme","Milestone","theme","palette","type","getCandyMachineId","candyMachineId","web3","PublicKey","process","env","REACT_APP_CANDY_MACHINE_ID","e","console","log","undefined","network","REACT_APP_SOLANA_NETWORK","rpcHost","REACT_APP_SOLANA_RPC_HOST","connection","Connection","startDateSeed","parseInt","REACT_APP_CANDY_START_DATE","txTimeoutInMilliseconds","App","endpoint","wallets"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport { useMemo } from 'react';\r\nimport * as anchor from '@project-serum/anchor';\r\nimport Home from './Home';\r\nimport NewNavbar from './Components/NewNavbar';\r\nimport FAQ from './Components/FAQ';\r\nimport Team from './Components/Team';\r\nimport Footer from './Components/footer';\r\nimport { clusterApiUrl } from '@solana/web3.js';\r\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\r\nimport {\r\n  getPhantomWallet,\r\n  getSlopeWallet,\r\n  getSolflareWallet,\r\n} from '@solana/wallet-adapter-wallets';\r\n\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from '@solana/wallet-adapter-react';\r\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\r\n\r\nimport { ThemeProvider, createTheme } from '@material-ui/core';\r\nimport Milestone from './Components/Milestone';\r\n\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});\r\n\r\nconst getCandyMachineId = (): anchor.web3.PublicKey | undefined => {\r\n  try {\r\n    const candyMachineId = new anchor.web3.PublicKey(\r\n      process.env.REACT_APP_CANDY_MACHINE_ID!,\r\n    );\r\n\r\n    return candyMachineId;\r\n  } catch (e) {\r\n    console.log('Failed to construct CandyMachineId', e);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst candyMachineId = getCandyMachineId();\r\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\r\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\r\nconst connection = new anchor.web3.Connection(rpcHost\r\n  ? rpcHost\r\n  : anchor.web3.clusterApiUrl('devnet'));\r\n\r\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\r\nconst txTimeoutInMilliseconds = 30000;\r\n\r\nconst App = () => {\r\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\r\n\r\n  const wallets = useMemo(\r\n    () => [\r\n      getPhantomWallet(),\r\n      getSolflareWallet(),\r\n      getSlopeWallet(),\r\n\r\n    ],\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ConnectionProvider endpoint={endpoint}>\r\n        <WalletProvider wallets={wallets} autoConnect>\r\n          <WalletDialogProvider>\r\n            <NewNavbar />\r\n            <Home\r\n              candyMachineId={candyMachineId}\r\n              connection={connection}\r\n              startDate={startDateSeed}\r\n              txTimeout={txTimeoutInMilliseconds}\r\n              rpcHost={rpcHost}\r\n            />\r\n            <Milestone/>\r\n              <Team/>\r\n\r\n            <Footer/>\r\n          </WalletDialogProvider>\r\n        </WalletProvider>\r\n      </ConnectionProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}